import 'dotenv/config'
import { getPayload } from 'payload'
import config from '@payload-config'

async function addArchiveBlocks() {
  console.log('üì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–æ–≤ –∞—Ä—Ö–∏–≤–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...\n')
  
  const payload = await getPayload({ config })
  
  // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É home
  const pages = await payload.find({
    collection: 'pages',
    where: {
      slug: {
        equals: 'home'
      }
    },
    limit: 1
  })
  
  if (pages.docs.length === 0) {
    console.log('‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ home –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
    process.exit(1)
  }
  
  const homePage = pages.docs[0]
  console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ home –Ω–∞–π–¥–µ–Ω–∞ (ID: ${homePage.id})`)
  console.log(`–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤: ${homePage.layout?.length || 0}\n`)
  
  // –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ –∞—Ä—Ö–∏–≤–∞ –ø–æ—Å—Ç–æ–≤
  const postsArchiveBlock = {
    blockType: 'archive',
    introContent: {
      root: {
        type: 'root',
        children: [
          {
            type: 'heading',
            children: [
              {
                type: 'text',
                detail: 0,
                format: 0,
                mode: 'normal',
                style: '',
                text: '–ù–∞—à –±–ª–æ–≥',
                version: 1,
              },
            ],
            direction: 'ltr',
            format: '',
            indent: 0,
            tag: 'h2',
            version: 1,
          },
          {
            type: 'paragraph',
            children: [
              {
                type: 'text',
                detail: 0,
                format: 0,
                mode: 'normal',
                style: '',
                text: '–ß–∏—Ç–∞–π—Ç–µ –Ω–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞, –≤–Ω–µ–¥—Ä–µ–Ω–∏–∏ GenAI –∏ –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.',
                version: 1,
              },
            ],
            direction: 'ltr',
            format: '',
            indent: 0,
            textFormat: 0,
            version: 1,
          },
        ],
        direction: 'ltr',
        format: '',
        indent: 0,
        version: 1,
      },
    },
    populateBy: 'collection',
    relationTo: 'posts',
    limit: 6,
  }
  
  // –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ –∞—Ä—Ö–∏–≤–∞ –∫–µ–π—Å–æ–≤
  const casesArchiveBlock = {
    blockType: 'archive',
    introContent: {
      root: {
        type: 'root',
        children: [
          {
            type: 'heading',
            children: [
              {
                type: 'text',
                detail: 0,
                format: 0,
                mode: 'normal',
                style: '',
                text: '–í—Å–µ –Ω–∞—à–∏ –∫–µ–π—Å—ã',
                version: 1,
              },
            ],
            direction: 'ltr',
            format: '',
            indent: 0,
            tag: 'h2',
            version: 1,
          },
          {
            type: 'paragraph',
            children: [
              {
                type: 'text',
                detail: 0,
                format: 0,
                mode: 'normal',
                style: '',
                text: '–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã.',
                version: 1,
              },
            ],
            direction: 'ltr',
            format: '',
            indent: 0,
            textFormat: 0,
            version: 1,
          },
        ],
        direction: 'ltr',
        format: '',
        indent: 0,
        version: 1,
      },
    },
    populateBy: 'collection',
    relationTo: 'cases',
    limit: 6,
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫–∏ –≤ layout (–ø–æ—Å–ª–µ –±–ª–æ–∫–∞ featuredCases, –ø–µ—Ä–µ–¥ contactForm)
  const currentLayout = homePage.layout || []
  
  // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –±–ª–æ–∫–∞ contactForm
  const contactFormIndex = currentLayout.findIndex((block: any) => block.blockType === 'contactForm')
  
  let newLayout
  if (contactFormIndex > -1) {
    // –í—Å—Ç–∞–≤–ª—è–µ–º –±–ª–æ–∫–∏ –ø–µ—Ä–µ–¥ contactForm
    newLayout = [
      ...currentLayout.slice(0, contactFormIndex),
      casesArchiveBlock,
      postsArchiveBlock,
      ...currentLayout.slice(contactFormIndex),
    ]
  } else {
    // –ï—Å–ª–∏ contactForm –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü
    newLayout = [
      ...currentLayout,
      casesArchiveBlock,
      postsArchiveBlock,
    ]
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
  await payload.update({
    collection: 'pages',
    id: homePage.id,
    data: {
      layout: newLayout,
    },
  })
  
  console.log('‚úÖ –ë–ª–æ–∫–∏ –∞—Ä—Ö–∏–≤–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã!')
  console.log(`  ‚Ä¢ –ê—Ä—Ö–∏–≤ –∫–µ–π—Å–æ–≤ (–ª–∏–º–∏—Ç: 6)`)
  console.log(`  ‚Ä¢ –ê—Ä—Ö–∏–≤ –ø–æ—Å—Ç–æ–≤ (–ª–∏–º–∏—Ç: 6)`)
  console.log(`\n–ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤: ${newLayout.length}`)
  
  process.exit(0)
}

addArchiveBlocks()
