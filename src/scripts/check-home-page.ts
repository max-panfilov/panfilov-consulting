import 'dotenv/config'
import { getPayload } from 'payload'
import config from '@payload-config'

async function checkHomePage() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã home...\n')
  
  const payload = await getPayload({ config })
  
  const pages = await payload.find({
    collection: 'pages',
    where: {
      slug: {
        equals: 'home'
      }
    },
    limit: 1
  })
  
  if (pages.docs.length === 0) {
    console.log('‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ home –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
    console.log('–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π fallback —Å –ø—É—Å—Ç—ã–º layout\n')
  } else {
    const homePage = pages.docs[0]
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ home –Ω–∞–π–¥–µ–Ω–∞')
    console.log(`ID: ${homePage.id}`)
    console.log(`–ó–∞–≥–æ–ª–æ–≤–æ–∫: ${homePage.title}`)
    console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤ –≤ layout: ${homePage.layout?.length || 0}\n`)
    
    if (homePage.layout && homePage.layout.length > 0) {
      console.log('–ë–ª–æ–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:')
      homePage.layout.forEach((block: any, index: number) => {
        console.log(`  ${index + 1}. ${block.blockType}`)
      })
    } else {
      console.log('‚ö†Ô∏è  Layout –ø—É—Å—Ç–æ–π!')
    }
  }
  
  process.exit(0)
}

checkHomePage()
