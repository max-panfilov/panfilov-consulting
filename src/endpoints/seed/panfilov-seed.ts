import type { Payload, PayloadRequest } from 'payload'

// Seed-—Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–∞–π—Ç–∞ Panfilov Consulting
export const panfilovSeed = async ({
  payload,
  req,
}: {
  payload: Payload
  req: PayloadRequest
}): Promise<void> => {
  payload.logger.info('üå± Starting Panfilov Consulting seed...')

  try {
    // 1. –°–æ–∑–¥–∞—ë–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞"
    payload.logger.info('üìÅ Creating category "–≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞"...')
    const expertiseCategory = await payload.create({
      collection: 'categories',
      data: {
        title: '–≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞',
        slug: 'ekspertiza',
      },
    })

    // 2. –°–æ–∑–¥–∞—ë–º –∫–µ–π—Å—ã
    payload.logger.info('üíº Creating cases...')
    
    const case1 = await payload.create({
      collection: 'cases',
      draft: true,
      data: {
        title: 'AI-—á–∞—Ç–±–æ—Ç –¥–ª—è –î–ö–°',
        slug: 'dks-chatbot',
        industry: 'electronics',
        challenge: '–°–Ω–∏–∑–∏—Ç—å –Ω–∞–≥—Ä—É–∑–∫—É –Ω–∞ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —É—Å–∫–æ—Ä–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ —à–∏—Ä–æ–∫–æ–º—É –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É —ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏.',
        solution: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: '–†–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —á–∞—Ç-–±–æ—Ç–∞ –Ω–∞ –±–∞–∑–µ RAG-–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, –∫–æ—Ç–æ—Ä—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –ø–æ–º–æ–≥–∞–µ—Ç —Å –ø–æ–¥–±–æ—Ä–æ–º –∞–Ω–∞–ª–æ–≥–æ–≤ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Ç–∏–ø–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã.',
                  },
                ],
              },
            ],
          },
        },
        results: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: '–¶–µ–ª–µ–≤–æ–π —Ä–æ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤ —Å 30% –¥–æ 70%+. –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å 4 —á–∞—Å–æ–≤ –¥–æ 2 –º–∏–Ω—É—Ç. –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ 40% –≤—Ä–µ–º–µ–Ω–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á.',
                  },
                ],
              },
            ],
          },
        },
        shortDescription: 'AI-—á–∞—Ç–±–æ—Ç –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π 70%+ –æ—Ç–≤–µ—Ç–æ–≤',
        technologies: [
          { technology: 'OpenAI GPT-4' },
          { technology: 'RAG' },
          { technology: 'Python' },
          { technology: 'FastAPI' },
          { technology: 'PostgreSQL' },
        ],
        featured: true,
        _status: 'published',
      },
    })

    const case2 = await payload.create({
      collection: 'cases',
      draft: true,
      data: {
        title: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç—É',
        slug: 'metalloprokat-telegram-bot',
        industry: 'metallurgy',
        challenge: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ—Å—Ç—É–ø–∞–ª–∞ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö (—Ñ–æ—Ç–æ, PDF, Excel), —Ç—Ä–µ–±–æ–≤–∞–ª–∞ —Ä—É—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∑–∞–Ω–∏–º–∞–ª–∞ –¥–æ 2 —á–∞—Å–æ–≤ –Ω–∞ –æ–¥–Ω—É –∑–∞—è–≤–∫—É.',
        solution: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: '–°–æ–∑–¥–∞–ª–∏ Telegram-–±–æ—Ç–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π OCR –∏ LLM –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –∑–∞—è–≤–æ–∫ –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∑–∞—è–≤–∫—É –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.',
                  },
                ],
              },
            ],
          },
        },
        results: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: '–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ —Å–æ–∫—Ä–∞—Ç–∏–ª–æ—Å—å —Å 2 —á–∞—Å–æ–≤ –¥–æ 10 –º–∏–Ω—É—Ç. –£—Å—Ç—Ä–∞–Ω–µ–Ω—ã –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ä—É—á–Ω–æ–º –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö. –£–≤–µ–ª–∏—á–µ–Ω–∞ –ø—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂ –≤ 3 —Ä–∞–∑–∞.',
                  },
                ],
              },
            ],
          },
        },
        shortDescription: 'Telegram-–±–æ—Ç —Å OCR –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫: –æ—Ç 2 —á–∞—Å–æ–≤ –¥–æ 10 –º–∏–Ω—É—Ç',
        technologies: [
          { technology: 'Telegram Bot API' },
          { technology: 'OCR' },
          { technology: 'YandexGPT' },
          { technology: 'Python' },
          { technology: 'PostgreSQL' },
        ],
        featured: true,
        _status: 'published',
      },
    })

    const case3 = await payload.create({
      collection: 'cases',
      draft: true,
      data: {
        title: 'On-premise AI-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –∫–æ–º–ø–∞–Ω–∏–∏',
        slug: 'law-firm-onpremise-ai',
        industry: 'legal',
        challenge: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ Due Diligence –±–µ–∑ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º LLM-–ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º.',
        solution: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: '–†–∞–∑–≤–µ—Ä–Ω—É–ª–∏ on-premise AI-–ø–ª–∞—Ç—Ñ–æ—Ä–º—É –Ω–∞ –±–∞–∑–µ –æ—Ç–∫—Ä—ã—Ç—ã—Ö LLM –º–æ–¥–µ–ª–µ–π –≤ –∑–∞–∫—Ä—ã—Ç–æ–º –∫–æ–Ω—Ç—É—Ä–µ –∫–æ–º–ø–∞–Ω–∏–∏. –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–æ–≥–æ–≤–æ—Ä—ã, –≤—ã—è–≤–ª—è–µ—Ç —Ä–∏—Å–∫–∏ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ä–µ–∑—é–º–µ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º.',
                  },
                ],
              },
            ],
          },
        },
        results: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: '100% –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤. –£—Å–∫–æ—Ä–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ 5 —Ä–∞–∑. –Æ—Ä–∏—Å—Ç—ã –ø–æ–ª—É—á–∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –±–æ–ª—å—à–∏–º–∏ –æ–±—ä–µ–º–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.',
                  },
                ],
              },
            ],
          },
        },
        shortDescription: 'On-premise AI –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏',
        technologies: [
          { technology: 'LLaMA 3' },
          { technology: 'Docker' },
          { technology: 'Kubernetes' },
          { technology: 'Python' },
          { technology: 'MinIO' },
        ],
        featured: true,
        _status: 'published',
      },
    })

    // 3. –°–æ–∑–¥–∞—ë–º –ø–æ—Å—Ç—ã –≤ –±–ª–æ–≥–µ
    payload.logger.info('üìù Creating blog posts...')
    
    const post1 = await payload.create({
      collection: 'posts',
      data: {
        title: 'RAG –¥–ª—è —Å—Ä–µ–¥–Ω–µ–≥–æ –∏ –∫—Ä—É–ø–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –≤ –†–§: –æ–±–∑–æ—Ä —Ä–µ—à–µ–Ω–∏–π –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏',
        slug: 'rag-for-business-russia',
        content: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: '–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ–±–∑–æ—Ä —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ RAG (Retrieval-Augmented Generation) –∏ –µ—ë –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º –±–∏–∑–Ω–µ—Å–µ.',
                  },
                ],
              },
            ],
          },
        },
        categories: [expertiseCategory.id],
        meta: {
          title: 'RAG –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –≤ –†–æ—Å—Å–∏–∏',
          description: '–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ–±–∑–æ—Ä —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ RAG (Retrieval-Augmented Generation) –∏ –µ—ë –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º –±–∏–∑–Ω–µ—Å–µ. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≥–æ—Ç–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.',
        },
        _status: 'published',
      },
    })

    const post2 = await payload.create({
      collection: 'posts',
      data: {
        title: '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ on-prem AI-–º–æ–¥–µ–ª–µ–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±–∏–∑–Ω–µ—Å–µ',
        slug: 'onprem-ai-models-comparison',
        content: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: '–ê–Ω–∞–ª–∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö LLM-–º–æ–¥–µ–ª–µ–π –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–∞–Ω–∏–∏: LLaMA, Mistral, Qwen –∏ –¥—Ä—É–≥–∏–µ.',
                  },
                ],
              },
            ],
          },
        },
        categories: [expertiseCategory.id],
        meta: {
          title: '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ on-premise AI –º–æ–¥–µ–ª–µ–π',
          description: '–ê–Ω–∞–ª–∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö LLM-–º–æ–¥–µ–ª–µ–π –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–∞–Ω–∏–∏: LLaMA, Mistral, Qwen –∏ –¥—Ä—É–≥–∏–µ. –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ä–µ—Å—É—Ä—Å–∞–º, –∫–µ–π—Å—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.',
        },
        _status: 'published',
      },
    })

    const post3 = await payload.create({
      collection: 'posts',
      data: {
        title: '–û–±–∑–æ—Ä GenAI –≤ –∫–ª—é—á–µ–≤—ã—Ö –æ—Ç—Ä–∞—Å–ª—è—Ö: –æ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –¥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞',
        slug: 'genai-industry-overview',
        content: {
          root: {
            type: 'root',
            version: 1,
            direction: 'ltr',
            format: '',
            indent: 0,
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    text: '–ö–∞–∫ –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–π AI —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –æ—Ç—Ä–∞—Å–ª–∏ —ç–∫–æ–Ω–æ–º–∏–∫–∏.',
                  },
                ],
              },
            ],
          },
        },
        categories: [expertiseCategory.id],
        meta: {
          title: 'GenAI –≤ –∫–ª—é—á–µ–≤—ã—Ö –æ—Ç—Ä–∞—Å–ª—è—Ö',
          description: '–ö–∞–∫ –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–π AI —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –æ—Ç—Ä–∞—Å–ª–∏ —ç–∫–æ–Ω–æ–º–∏–∫–∏. –†–µ–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è, –æ–∂–∏–¥–∞–µ–º—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –∏ –ø–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è.',
        },
        _status: 'published',
      },
    })

    // 4. –°–æ–∑–¥–∞—ë–º —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    payload.logger.info('üìã Creating contact form...')
    
    const contactForm = await payload.create({
      collection: 'forms',
      data: {
        title: '–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é',
        fields: [
          {
            blockType: 'text',
            name: 'name',
            label: '–í–∞—à–µ –∏–º—è',
            required: true,
          },
          {
            blockType: 'text',
            name: 'company',
            label: '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏',
            required: false,
          },
          {
            blockType: 'email',
            name: 'email',
            label: 'Email –¥–ª—è —Å–≤—è–∑–∏',
            required: true,
          },
          {
            blockType: 'text',
            name: 'phone',
            label: '–¢–µ–ª–µ—Ñ–æ–Ω',
            required: false,
          },
          {
            blockType: 'textarea',
            name: 'message',
            label: '–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∑–∞–¥–∞—á—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å',
            required: true,
          },
        ],
        submitButtonLabel: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É',
        confirmationType: 'redirect',
        redirect: {
          url: '/thank-you',
        },
        emails: [
          {
            emailTo: 'start@panfilov.consulting',
            subject: '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞',
            message: {
              root: {
                type: 'root',
                version: 1,
                direction: 'ltr',
                format: '',
                indent: 0,
                children: [
                  {
                    type: 'paragraph',
                    version: 1,
                    children: [
                      {
                        type: 'text',
                        text: '–ü–æ–ª—É—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ panfilov.consulting',
                      },
                    ],
                  },
                ],
              },
            },
          },
        ],
      },
    })

    payload.logger.info('‚úÖ Panfilov Consulting seed completed successfully!')
    payload.logger.info(`   - Category created: ${expertiseCategory.id}`)
    payload.logger.info(`   - Cases created: 3`)
    payload.logger.info(`   - Posts created: 3`)
    payload.logger.info(`   - Form created: ${contactForm.id}`)
  } catch (error) {
    payload.logger.error('‚ùå Error seeding Panfilov Consulting data:')
    payload.logger.error(error)
    throw error
  }
}
