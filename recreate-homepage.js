#!/usr/bin/env node
/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
import('dotenv/config')

async function recreateHomePage() {
  console.log('üè† Starting homepage recreation...\n')

  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
    const { homePageSeed } = await import('./src/endpoints/seed/homepage-seed.ts')
    const configPromise = await import('./src/payload.config.ts')
    const { getPayload } = await import('payload')

    const payload = await getPayload({ config: configPromise.default })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ home
    const existingPage = await payload.find({
      collection: 'pages',
      where: {
        slug: {
          equals: 'home',
        },
      },
      limit: 1,
    })

    if (existingPage.docs.length > 0) {
      console.log('‚ö†Ô∏è  Home page already exists. Deleting old version...')
      await payload.delete({
        collection: 'pages',
        id: existingPage.docs[0].id,
        context: {
          disableRevalidate: true,
        },
      })
      console.log('‚úÖ Old home page deleted\n')
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    console.log('üìÑ Creating new home page...')
    await homePageSeed({ payload, req: {} })

    console.log('\n‚úÖ Homepage recreation completed successfully!')
    process.exit(0)
  } catch (error) {
    console.error('\n‚ùå Error recreating homepage:')
    console.error(error)
    process.exit(1)
  }
}

recreateHomePage()
